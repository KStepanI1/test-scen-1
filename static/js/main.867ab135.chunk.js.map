{"version":3,"sources":["components/organisms/Header.tsx","components/organisms/SideBar.tsx","components/atoms/Button.tsx","data/users.ts","assets/images/icon_trash.svg","assets/images/icon_pencil.svg","assets/images/icon_plus.svg","assets/images/icon_close.svg","components/organisms/AddUserModal.tsx","components/organisms/EditUserModal.tsx","components/organisms/DeleteUserModal.tsx","components/pages/UsersPage.tsx","App.tsx","index.tsx"],"names":["Header","className","SideBar","Button","type","text","icon","callback","disabled","onClick","src","alt","initialUsers","id","lastName","firstName","middleName","email","login","AddUserModal","addUser","closeModal","useState","Math","floor","random","userData","setUserData","isButtonDisabled","setButtonDisabled","handleChange","event","name","target","value","CloseIcon","onSubmit","preventDefault","htmlFor","placeholder","onChange","EditUserModal","updateUser","updatedUserData","setUpdateUserData","DeleteUserModal","deleteUser","UsersPage","users","setUsers","isAddUserModalOpen","setAddUserModalOpen","isEditUserModalOpen","setEditUserModalOpen","isDeleteUserModalOpen","setDeleteUserModalOpen","editingUser","setEditingUser","deletingUser","setDeletingUser","onAddButtonClick","useCallback","onEditButtonClick","this","onDeleteButtonClick","copyUsers","user","find","e","userIndex","undefined","indexOf","splice","PlusIcon","map","i","bind","PencilIcon","TrashIcon","App","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"sMACaA,EAAS,WAClB,OACI,wBAAQC,UAAW,SAAnB,SACI,qBAAKA,UAAW,uBCFfC,EAAU,WACnB,OACI,uBAAOD,UAAW,UAAlB,SACI,qBAAKA,UAAW,wBCMfE,EAAS,SAAC,GAA6E,IAA3EC,EAA0E,EAA1EA,KAAMC,EAAoE,EAApEA,KAAMC,EAA8D,EAA9DA,KAAMC,EAAwD,EAAxDA,SAAUC,EAA8C,EAA9CA,SAAUP,EAAoC,EAApCA,UAC3D,OACI,yBAAQG,KAAMA,EACNH,UAAS,iBAAYA,GACrBQ,QAASF,EAAUC,SAAUA,IAAY,EAFjD,UAGKF,GAAQ,qBAAKL,UAAW,eAAgBS,IAAKJ,EAAMK,IAAI,SACvDN,GAAQ,qBAAKJ,UAAS,uBAAkBK,EAAO,YAAc,IAArD,SAA4DD,QCRpEO,EACT,CACI,CAACC,GAAI,EAAGC,SAAU,uCAAUC,UAAW,2BAAQC,WAAY,mDAAYC,MAAO,iBAAkBC,MAAO,SACvG,CAACL,GAAI,EAAGC,SAAU,uCAAUC,UAAW,2BAAQC,WAAY,yDAAaC,MAAO,iBAAkBC,MAAO,SACxG,CAACL,GAAI,EAAGC,SAAU,6CAAWC,UAAW,mDAAYC,WAAY,+DAAcC,MAAO,iBAAkBC,MAAO,SAC9G,CAACL,GAAI,EAAGC,SAAU,6CAAWC,UAAW,uCAAUC,WAAY,yDAAaC,MAAO,iBAAkBC,MAAO,SAC3G,CAACL,GAAI,EAAGC,SAAU,yDAAaC,UAAW,uCAAUC,WAAY,mDAAYC,MAAO,iBAAkBC,MAAO,SAC5G,CAACL,GAAI,EAAGC,SAAU,yDAAaC,UAAW,iCAASC,WAAY,qEAAeC,MAAO,iBAAkBC,MAAO,UChBvG,MAA0B,uCCA1B,MAA0B,wCCA1B,MAA0B,sC,cCA1B,MAA0B,uCCa5BC,EAAe,SAAC,GAA+C,IAA9CC,EAA6C,EAA7CA,QAASC,EAAoC,EAApCA,WACnC,EAAgCC,mBAAe,CAC3CT,GAAIU,KAAKC,MAAsB,IAAhBD,KAAKE,UACpBX,SAAU,GACVC,UAAW,GACXC,WAAY,GACZC,MAAO,GACPC,MAAO,KANX,mBAAOQ,EAAP,KAAiBC,EAAjB,KAQA,EAA8CL,oBAAkB,GAAhE,mBAAOM,EAAP,KAAyBC,EAAzB,KAEMC,EAAe,SAACC,GAClB,IAAMC,EAAOD,EAAME,OAAOD,KACpBE,EAAQH,EAAME,OAAOC,MAC3BP,EAAY,2BAAID,GAAL,kBAAgBM,EAAOE,KACR,KAAtBR,EAASZ,UACiB,KAAvBY,EAASX,WACe,KAAxBW,EAASV,YACU,KAAnBU,EAAST,OACU,KAAnBS,EAASR,OACZW,GAAkB,IAU1B,OACI,qBAAK5B,UAAW,iBAAhB,SACI,sBAAKA,UAAW,0BAAhB,UACI,sBAAKA,UAAW,gBAAhB,UACI,qBAAKA,UAAW,eAAhB,uIACA,qBAAKA,UAAW,eAAgBQ,QAASY,EAAzC,SACI,qBAAKX,IAAKyB,EAAWxB,IAAI,eAGjC,qBAAKV,UAAW,iBAAhB,SACI,uBAAMmC,SAhBD,SAACL,GAClBA,EAAMM,iBACNjB,EAAQM,GACRL,KAaY,UACI,uBAAOiB,QAAS,aAAhB,SACI,sBAAKrC,UAAW,eAAgBY,GAAI,aAApC,UACI,6EACA,uBAAOZ,UAAW,eACXG,KAAK,OACL4B,KAAM,WACNO,YAAa,wFACbC,SAAUV,SAGzB,uBAAOQ,QAAS,cAAhB,SACI,sBAAKrC,UAAW,eAAgBY,GAAI,cAApC,UACI,qDACA,uBAAOZ,UAAW,eACXG,KAAK,OACL4B,KAAM,YACNO,YAAa,gEACbC,SAAUV,SAGzB,uBAAOQ,QAAS,eAAhB,SACI,sBAAKrC,UAAW,eAAgBY,GAAI,eAApC,UACI,mFACA,uBAAOZ,UAAW,eACXG,KAAK,OACL4B,KAAM,aACNO,YAAa,8FACbC,SAAUV,SAGzB,uBAAOQ,QAAS,cAAhB,SACI,sBAAKrC,UAAW,eAAgBY,GAAI,cAApC,UACI,yCACA,uBAAOZ,UAAW,eACXG,KAAK,OACLmC,YAAa,+IACbP,KAAM,QACNQ,SAAUV,SAGzB,uBAAOQ,QAAS,cAAhB,SACI,sBAAKrC,UAAW,eAAgBY,GAAI,cAApC,UACI,iEACA,uBAAOZ,UAAW,eACXG,KAAK,OACL4B,KAAM,QACNO,YAAa,4EACbC,SAAUV,SAGzB,qBAAK7B,UAAW,gBAAhB,SACI,cAAC,EAAD,CAAQG,KAAK,SACLC,KAAM,6CACNG,SAAUoB,iBChGjCa,EAAgB,SAAC,GAA4D,IAA3Df,EAA0D,EAA1DA,SAAUgB,EAAgD,EAAhDA,WAAYrB,EAAoC,EAApCA,WACjD,EAA6CC,mBAAeI,GAA5D,mBAAOiB,EAAP,KAAwBC,EAAxB,KAEMd,EAAe,SAACC,GAClB,IAAMC,EAAOD,EAAME,OAAOD,KACpBE,EAAQH,EAAME,OAAOC,MAC3BU,EAAkB,2BAAID,GAAL,kBAAuBX,EAAOE,MASnD,OACI,qBAAKjC,UAAW,kBAAhB,SACI,sBAAKA,UAAW,2BAAhB,UACI,sBAAKA,UAAW,gBAAhB,UACI,qBAAKA,UAAW,eAAhB,2KACA,qBAAKA,UAAW,eAAgBQ,QAASY,EAAzC,SACI,qBAAKX,IAAKyB,EAAWxB,IAAI,eAGjC,qBAAKV,UAAW,iBAAhB,SACI,uBAAMmC,SAhBD,SAACL,GAClBA,EAAMM,iBACNK,EAAWC,GACXtB,KAaY,UACI,uBAAOiB,QAAS,aAAhB,SACI,sBAAKrC,UAAW,eAAgBY,GAAI,aAApC,UACI,6EACA,uBAAOZ,UAAW,eACXG,KAAK,OACL4B,KAAM,WACNE,MAAOS,EAAgB7B,SACvByB,YAAa,wFACbC,SAAUV,SAGzB,uBAAOQ,QAAS,cAAhB,SACI,sBAAKrC,UAAW,eAAgBY,GAAI,cAApC,UACI,qDACA,uBAAOZ,UAAW,eACXG,KAAK,OACL4B,KAAM,YACNE,MAAOS,EAAgB5B,UACvBwB,YAAa,gEACbC,SAAUV,SAGzB,uBAAOQ,QAAS,eAAhB,SACI,sBAAKrC,UAAW,eAAgBY,GAAI,eAApC,UACI,mFACA,uBAAOZ,UAAW,eACXG,KAAK,OACL4B,KAAM,aACNE,MAAOS,EAAgB3B,WACvBuB,YAAa,8FACbC,SAAUV,SAGzB,uBAAOQ,QAAS,cAAhB,SACI,sBAAKrC,UAAW,eAAgBY,GAAI,cAApC,UACI,yCACA,uBAAOZ,UAAW,eACXG,KAAK,OACL8B,MAAOS,EAAgB1B,MACvBsB,YAAa,+IACbP,KAAM,QACNQ,SAAUV,SAGzB,uBAAOQ,QAAS,cAAhB,SACI,sBAAKrC,UAAW,eAAgBY,GAAI,cAApC,UACI,iEACA,uBAAOZ,UAAW,eACXG,KAAK,OACL8B,MAAOS,EAAgBzB,MACvBc,KAAM,QACNO,YAAa,4EACbC,SAAUV,SAGzB,qBAAK7B,UAAW,gBAAhB,SACI,cAAC,EAAD,CAAQG,KAAK,SACLC,KAAM,wECrF7BwC,EAAkB,SAAC,GAAiD,IAA/CnB,EAA8C,EAA9CA,SAAUoB,EAAoC,EAApCA,WAAYzB,EAAwB,EAAxBA,WAQpD,OACI,qBAAKpB,UAAW,oBAAhB,SACI,sBAAKA,UAAW,6BAAhB,UACI,qBAAKA,UAAW,gBAAhB,SACI,qBAAKA,UAAW,eAAhB,yIAEJ,qBAAKA,UAAW,iBAAhB,SACI,uBAAMmC,SAbD,SAACL,GAClBA,EAAMM,iBACNS,EAAWpB,GACXL,KAUY,UACI,qBAAKpB,UAAW,cAAhB,+LAGA,sBAAKA,UAAW,gBAAhB,UACI,cAAC,EAAD,CAAQG,KAAM,SACNC,KAAM,mDACNJ,UAAW,SACXM,SAAUc,IAClB,cAAC,EAAD,CAAQjB,KAAM,SACNC,KAAM,6DCtB7B0C,EAAY,WACrB,MAA0BzB,mBAAiBV,GAA3C,mBAAOoC,EAAP,KAAcC,EAAd,KACA,EAAkD3B,oBAAkB,GAApE,mBAAO4B,EAAP,KAA2BC,EAA3B,KACA,EAAoD7B,oBAAkB,GAAtE,mBAAO8B,EAAP,KAA4BC,EAA5B,KACA,EAAwD/B,oBAAkB,GAA1E,mBAAOgC,EAAP,KAA8BC,EAA9B,KACA,EAAsCjC,mBAAsB,MAA5D,mBAAOkC,EAAP,KAAoBC,EAApB,KACA,EAAwCnC,mBAAsB,MAA9D,mBAAOoC,EAAP,KAAqBC,EAArB,KAEMC,EAAmBC,uBAAY,WACjCV,GAAoB,KACrB,IAEGW,EAAoBD,uBAAY,WAClCJ,EAAeM,MACfV,GAAqB,KACtB,IAEGW,EAAsBH,uBAAY,WACpCF,EAAgBI,MAChBR,GAAuB,KACxB,IAEGnC,EAAUyC,uBAAY,SAACnC,GACzBuB,EAAS,CAACvB,GAAF,mBAAesB,OACxB,CAACA,IAEEN,EAAamB,uBAAY,SAAClB,GAC5B,IAAIsB,EAAS,YAAOjB,GACdkB,EAAOlB,EAAMmB,MAAK,SAACC,GAAD,OAAOA,EAAEvD,KAAO8B,EAAgB9B,MAClDwD,OAAqBC,IAATJ,GACX,EACDlB,EAAMuB,QAAQL,IACD,IAAfG,IACAJ,EAAUO,OAAOH,EAAW,EAAG1B,GAC/BM,EAASgB,IAEbR,EAAe,QAChB,CAACT,IAEEF,EAAae,uBAAY,SAACnC,GAC5B,IAAIuC,EAAS,YAAOjB,GACdkB,EAAOlB,EAAMmB,MAAK,SAACC,GAAD,OAAOA,EAAEvD,KAAOa,EAASb,MAC3CwD,OAAqBC,IAATJ,GACX,EACDlB,EAAMuB,QAAQL,IACD,IAAfG,IACAJ,EAAUO,OAAOH,EAAW,GAC5BpB,EAASgB,IAEbN,EAAgB,QACjB,CAACX,IAEJ,OACI,sBAAK/C,UAAW,aAAhB,UACI,cAAC,EAAD,IACA,uBAAMA,UAAW,sBAAjB,UACI,cAAC,EAAD,IACA,sBAAKA,UAAW,oBAAhB,UACI,sBAAKA,UAAW,wBAAhB,UACI,oBAAIA,UAAW,kBAAf,sFACA,cAAC,EAAD,CAAQG,KAAM,SACNE,KAAMmE,EACNpE,KAAM,mDAAYE,SAAUqD,OAExC,wBAAO3D,UAAW,oBAAlB,UACI,gCACA,qBAAIA,UAAW,iBAAf,UACI,oBAAIA,UAAW,gBAAf,wDACA,oBAAIA,UAAW,gBAAf,gCACA,oBAAIA,UAAW,gBAAf,8DACA,oBAAIA,UAAW,gBAAf,oBACA,oBAAIA,UAAW,gBAAf,4CACA,oBAAIA,UAAW,uBAGnB,gCACC+C,GACDA,EAAM0B,KAAI,SAACR,EAAMS,GACb,OACI,qBACI1E,UAAW,aADf,UAEI,oBAAIA,UAAW,eAAf,SAAgCiE,EAAKpD,WACrC,oBAAIb,UAAW,eAAf,SAAgCiE,EAAKnD,YACrC,oBAAId,UAAW,eAAf,SAAgCiE,EAAKlD,aACrC,oBAAIf,UAAW,eAAf,SAAgCiE,EAAKjD,QACrC,oBAAIhB,UAAW,eAAf,SAAgCiE,EAAKhD,QACrC,oBAAIjB,UAAW,uBAAf,SACI,sBAAKA,UAAW,UAAhB,UACI,cAAC,EAAD,CAAQG,KAAM,SACNG,SAAUuD,EAAkBc,KAAKV,GACjC7D,KAAM,KAAMC,KAAMuE,IAC1B,cAAC,EAAD,CAAQzE,KAAM,SACNG,SAAUyD,EAAoBY,KAAKV,GACnC7D,KAAM,KAAMC,KAAMwE,WAdtC,eAAiBH,EAAI,eAyBpCzB,GACE,cAAC,EAAD,CAAc9B,QAASA,EACTC,WAAY,kBAAM8B,GAAoB,MAEtDC,GAAuBI,GACrB,cAAC,EAAD,CAAe9B,SAAU8B,EACxBnC,WAAY,kBAAMgC,GAAqB,IACzBX,WAAYA,IAE7BY,GAAyBI,GACvB,cAAC,EAAD,CAAiBZ,WAAYA,EACZpB,SAAUgC,EACVrC,WAAY,kBAAMkC,GAAuB,aCvH9DwB,MANf,WACE,OACE,cAAC,EAAD,K,MCAJC,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,W","file":"static/js/main.867ab135.chunk.js","sourcesContent":["\r\nexport const Header = (): JSX.Element => {\r\n    return (\r\n        <header className={'header'}>\r\n            <div className={'header__content'}>\r\n\r\n            </div>\r\n        </header>\r\n    );\r\n}","\r\n\r\nexport const SideBar = (): JSX.Element => {\r\n    return (\r\n        <aside className={'sidebar'}>\r\n            <div className={'sidebar__content'}>\r\n\r\n            </div>\r\n        </aside>\r\n    );\r\n}","import React from \"react\";\r\n\r\ninterface Props {\r\n    type?: \"button\" | \"submit\" | \"reset\" | undefined;\r\n    text: string | null;\r\n    icon?: any;\r\n    callback?: any;\r\n    disabled?: boolean;\r\n    className?: string;\r\n}\r\n\r\nexport const Button = ({ type, text, icon, callback, disabled, className }: Props): JSX.Element => {\r\n    return (\r\n        <button type={type}\r\n                className={`button ${className}`}\r\n                onClick={callback} disabled={disabled || false}>\r\n            {icon && <img className={'button__icon'} src={icon} alt=\"plus\"/>}\r\n            {text && <div className={`button__text ${icon ? 'with-icon' : ''}`}>{text}</div>}\r\n        </button>\r\n    );\r\n}","export interface User {\r\n    id: number;\r\n    lastName: string;\r\n    firstName: string;\r\n    middleName: string;\r\n    email: string;\r\n    login: string;\r\n}\r\n\r\nexport const initialUsers: User[] =\r\n    [\r\n        {id: 1, lastName: 'Иванов', firstName: 'Иван', middleName: 'Иванович', email: 'mail1@mail.com', login: 'user1'},\r\n        {id: 2, lastName: 'Петров', firstName: 'Петр', middleName: 'Сергеевич', email: 'mail2@mail.com', login: 'user2'},\r\n        {id: 3, lastName: 'Сергеев', firstName: 'Григорий', middleName: 'Викторович', email: 'mail3@mail.com', login: 'user3'},\r\n        {id: 4, lastName: 'Федоров', firstName: 'Виктор', middleName: 'Федорович', email: 'mail4@mail.com', login: 'user4'},\r\n        {id: 5, lastName: 'Хвастунов', firstName: 'Сергей', middleName: 'Петрович', email: 'mail5@mail.com', login: 'user5'},\r\n        {id: 6, lastName: 'Григорьев', firstName: 'Федор', middleName: 'Григорьевич', email: 'mail6@mail.com', login: 'user6'},\r\n    ]\r\n","export default __webpack_public_path__ + \"static/media/icon_trash.7c8bc93a.svg\";","export default __webpack_public_path__ + \"static/media/icon_pencil.5c4ed263.svg\";","export default __webpack_public_path__ + \"static/media/icon_plus.bdf6500d.svg\";","export default __webpack_public_path__ + \"static/media/icon_close.66cef32e.svg\";","import {useState} from \"react\";\r\nimport {User} from \"../../data/users\";\r\nimport React from \"react\";\r\nimport {Button} from \"../atoms/Button\";\r\nimport CloseIcon from \"../../assets/images/icon_close.svg\";\r\n\r\n\r\ninterface Props {\r\n    addUser: Function;\r\n    closeModal: any;\r\n}\r\n\r\n\r\nexport const AddUserModal = ({addUser, closeModal}: Props): JSX.Element => {\r\n    const [userData, setUserData] = useState<User>({\r\n        id: Math.floor(Math.random() * 10000000),\r\n        lastName: '',\r\n        firstName: '',\r\n        middleName: '',\r\n        email: '',\r\n        login: ''\r\n    })\r\n    const [isButtonDisabled, setButtonDisabled] = useState<boolean>(true);\r\n\r\n    const handleChange = (event: React.ChangeEvent<HTMLInputElement>) => {\r\n        const name = event.target.name;\r\n        const value = event.target.value;\r\n        setUserData({...userData, [name]: value})\r\n        if (userData.lastName !== ''\r\n            && userData.firstName !== ''\r\n            && userData.middleName !== ''\r\n            && userData.email !== ''\r\n            && userData.login !== '') {\r\n            setButtonDisabled(false);\r\n        }\r\n    }\r\n\r\n    const handleSubmit = (event: any) => {\r\n        event.preventDefault();\r\n        addUser(userData);\r\n        closeModal();\r\n    }\r\n\r\n    return (\r\n        <div className={'add-user-modal'}>\r\n            <div className={'add-user-modal__content'}>\r\n                <div className={'modal__header'}>\r\n                    <div className={'modal__title'}>Создание пользователя</div>\r\n                    <div className={'modal__close'} onClick={closeModal}>\r\n                        <img src={CloseIcon} alt=\"close\"/>\r\n                    </div>\r\n                </div>\r\n                <div className={'modal__content'}>\r\n                    <form onSubmit={handleSubmit}>\r\n                        <label htmlFor={'field-last'}>\r\n                            <div className={'modal__field'} id={'field-last'}>\r\n                                <div>Фамилия</div>\r\n                                <input className={'modal__input'}\r\n                                       type=\"text\"\r\n                                       name={'lastName'}\r\n                                       placeholder={'Введите фамилию'}\r\n                                       onChange={handleChange}/>\r\n                            </div>\r\n                        </label>\r\n                        <label htmlFor={'field-first'}>\r\n                            <div className={'modal__field'} id={'field-first'}>\r\n                                <div>Имя</div>\r\n                                <input className={'modal__input'}\r\n                                       type=\"text\"\r\n                                       name={'firstName'}\r\n                                       placeholder={'Введите имя'}\r\n                                       onChange={handleChange}/>\r\n                            </div>\r\n                        </label>\r\n                        <label htmlFor={'field-middle'}>\r\n                            <div className={'modal__field'} id={'field-middle'}>\r\n                                <div>Отчество</div>\r\n                                <input className={'modal__input'}\r\n                                       type=\"text\"\r\n                                       name={'middleName'}\r\n                                       placeholder={'Введите отчество'}\r\n                                       onChange={handleChange}/>\r\n                            </div>\r\n                        </label>\r\n                        <label htmlFor={'field-email'}>\r\n                            <div className={'modal__field'} id={'field-email'}>\r\n                                <div>E-mail</div>\r\n                                <input className={'modal__input'}\r\n                                       type=\"text\"\r\n                                       placeholder={'Введите электронную почту'}\r\n                                       name={'email'}\r\n                                       onChange={handleChange}/>\r\n                            </div>\r\n                        </label>\r\n                        <label htmlFor={'field-login'}>\r\n                            <div className={'modal__field'} id={'field-login'}>\r\n                                <div>Логин</div>\r\n                                <input className={'modal__input'}\r\n                                       type=\"text\"\r\n                                       name={'login'}\r\n                                       placeholder={'Введите логин'}\r\n                                       onChange={handleChange}/>\r\n                            </div>\r\n                        </label>\r\n                        <div className={'modal__footer'}>\r\n                            <Button type=\"submit\"\r\n                                    text={'Создать'}\r\n                                    disabled={isButtonDisabled}/>\r\n                        </div>\r\n                    </form>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n}","import {Button} from \"../atoms/Button\";\r\nimport React, {useState} from \"react\";\r\nimport {User} from \"../../data/users\";\r\nimport CloseIcon from \"../../assets/images/icon_close.svg\";\r\n\r\ninterface Props {\r\n    userData: User;\r\n    updateUser: any;\r\n    closeModal: any;\r\n}\r\n\r\nexport const EditUserModal = ({userData, updateUser, closeModal}: Props): JSX.Element => {\r\n    const [updatedUserData, setUpdateUserData] = useState<User>(userData);\r\n\r\n    const handleChange = (event: React.ChangeEvent<HTMLInputElement>) => {\r\n        const name = event.target.name;\r\n        const value = event.target.value;\r\n        setUpdateUserData({...updatedUserData, [name]: value});\r\n    }\r\n\r\n    const handleSubmit = (event: any) => {\r\n        event.preventDefault();\r\n        updateUser(updatedUserData);\r\n        closeModal();\r\n    }\r\n\r\n    return (\r\n        <div className={'edit-user-modal'}>\r\n            <div className={'edit-user-modal__content'}>\r\n                <div className={'modal__header'}>\r\n                    <div className={'modal__title'}>Редактирование пользователя</div>\r\n                    <div className={'modal__close'} onClick={closeModal}>\r\n                        <img src={CloseIcon} alt=\"close\"/>\r\n                    </div>\r\n                </div>\r\n                <div className={'modal__content'}>\r\n                    <form onSubmit={handleSubmit}>\r\n                        <label htmlFor={'field-last'}>\r\n                            <div className={'modal__field'} id={'field-last'}>\r\n                                <div>Фамилия</div>\r\n                                <input className={'modal__input'}\r\n                                       type=\"text\"\r\n                                       name={'lastName'}\r\n                                       value={updatedUserData.lastName}\r\n                                       placeholder={'Введите фамилию'}\r\n                                       onChange={handleChange}/>\r\n                            </div>\r\n                        </label>\r\n                        <label htmlFor={'field-first'}>\r\n                            <div className={'modal__field'} id={'field-first'}>\r\n                                <div>Имя</div>\r\n                                <input className={'modal__input'}\r\n                                       type=\"text\"\r\n                                       name={'firstName'}\r\n                                       value={updatedUserData.firstName}\r\n                                       placeholder={'Введите имя'}\r\n                                       onChange={handleChange}/>\r\n                            </div>\r\n                        </label>\r\n                        <label htmlFor={'field-middle'}>\r\n                            <div className={'modal__field'} id={'field-middle'}>\r\n                                <div>Отчество</div>\r\n                                <input className={'modal__input'}\r\n                                       type=\"text\"\r\n                                       name={'middleName'}\r\n                                       value={updatedUserData.middleName}\r\n                                       placeholder={'Введите отчество'}\r\n                                       onChange={handleChange}/>\r\n                            </div>\r\n                        </label>\r\n                        <label htmlFor={'field-email'}>\r\n                            <div className={'modal__field'} id={'field-email'}>\r\n                                <div>E-mail</div>\r\n                                <input className={'modal__input'}\r\n                                       type=\"text\"\r\n                                       value={updatedUserData.email}\r\n                                       placeholder={'Введите электронную почту'}\r\n                                       name={'email'}\r\n                                       onChange={handleChange}/>\r\n                            </div>\r\n                        </label>\r\n                        <label htmlFor={'field-login'}>\r\n                            <div className={'modal__field'} id={'field-login'}>\r\n                                <div>Логин</div>\r\n                                <input className={'modal__input'}\r\n                                       type=\"text\"\r\n                                       value={updatedUserData.login}\r\n                                       name={'login'}\r\n                                       placeholder={'Введите логин'}\r\n                                       onChange={handleChange}/>\r\n                            </div>\r\n                        </label>\r\n                        <div className={'modal__footer'}>\r\n                            <Button type=\"submit\"\r\n                                    text={'Сохранить'}/>\r\n                        </div>\r\n                    </form>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n}","import { User } from \"../../data/users\";\r\nimport { Button } from \"../atoms/Button\";\r\n\r\ninterface Props {\r\n    userData: User;\r\n    deleteUser: any;\r\n    closeModal: any;\r\n}\r\n\r\nexport const DeleteUserModal = ({ userData, deleteUser, closeModal }: Props) => {\r\n\r\n    const handleSubmit = (event: any) => {\r\n        event.preventDefault();\r\n        deleteUser(userData);\r\n        closeModal();\r\n    }\r\n\r\n    return (\r\n        <div className={'delete-user-modal'}>\r\n            <div className={'delete-user-modal__content'}>\r\n                <div className={'modal__header'}>\r\n                    <div className={'modal__title'}>Удаление пользователя</div>\r\n                </div>\r\n                <div className={'modal__content'}>\r\n                    <form onSubmit={handleSubmit}>\r\n                        <div className={'modal__text'}>\r\n                            Удалить выбранного пользователя?\r\n                        </div>\r\n                        <div className={'modal__footer'}>\r\n                            <Button type={'button'}\r\n                                    text={'Отменить'}\r\n                                    className={'cancel'}\r\n                                    callback={closeModal}/>\r\n                            <Button type={'submit'}\r\n                                    text={'Удалить'} />\r\n                        </div>\r\n                    </form>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n}","import {Header} from \"../organisms/Header\";\r\nimport {SideBar} from \"../organisms/SideBar\";\r\nimport {Button} from \"../atoms/Button\";\r\nimport {initialUsers, User} from \"../../data/users\";\r\nimport React, {useCallback, useState} from \"react\";\r\nimport TrashIcon from \"../../assets/images/icon_trash.svg\";\r\nimport PencilIcon from \"../../assets/images/icon_pencil.svg\";\r\nimport PlusIcon from \"../../assets/images/icon_plus.svg\";\r\nimport {AddUserModal} from \"../organisms/AddUserModal\";\r\nimport {EditUserModal} from \"../organisms/EditUserModal\";\r\nimport {DeleteUserModal} from \"../organisms/DeleteUserModal\";\r\n\r\nexport const UsersPage = (): JSX.Element => {\r\n    const [users, setUsers] = useState<User[]>(initialUsers);\r\n    const [isAddUserModalOpen, setAddUserModalOpen] = useState<boolean>(false);\r\n    const [isEditUserModalOpen, setEditUserModalOpen] = useState<boolean>(false);\r\n    const [isDeleteUserModalOpen, setDeleteUserModalOpen] = useState<boolean>(false);\r\n    const [editingUser, setEditingUser] = useState<User | null>(null);\r\n    const [deletingUser, setDeletingUser] = useState<User | null>(null);\r\n\r\n    const onAddButtonClick = useCallback(() => {\r\n        setAddUserModalOpen(true);\r\n    }, []);\r\n\r\n    const onEditButtonClick = useCallback(function (this: User) {\r\n        setEditingUser(this);\r\n        setEditUserModalOpen(true);\r\n    }, [])\r\n\r\n    const onDeleteButtonClick = useCallback(function (this: User) {\r\n        setDeletingUser(this);\r\n        setDeleteUserModalOpen(true);\r\n    }, [])\r\n\r\n    const addUser = useCallback((userData: User) => {\r\n        setUsers([userData, ...users]);\r\n    }, [users])\r\n\r\n    const updateUser = useCallback((updatedUserData: User) => {\r\n        let copyUsers = [...users];\r\n        const user = users.find((e) => e.id === updatedUserData.id)\r\n        const userIndex = user === undefined\r\n            ? -1\r\n            : users.indexOf(user);\r\n        if (userIndex !== -1) {\r\n            copyUsers.splice(userIndex, 1, updatedUserData);\r\n            setUsers(copyUsers);\r\n        }\r\n        setEditingUser(null);\r\n    }, [users])\r\n\r\n    const deleteUser = useCallback((userData: User) => {\r\n        let copyUsers = [...users];\r\n        const user = users.find((e) => e.id === userData.id)\r\n        const userIndex = user === undefined\r\n            ? -1\r\n            : users.indexOf(user);\r\n        if (userIndex !== -1) {\r\n            copyUsers.splice(userIndex, 1);\r\n            setUsers(copyUsers);\r\n        }\r\n        setDeletingUser(null);\r\n    }, [users])\r\n\r\n    return (\r\n        <div className={'users-page'}>\r\n            <Header/>\r\n            <main className={'users-page__content'}>\r\n                <SideBar/>\r\n                <div className={'users-page__users'}>\r\n                    <div className={'users-page__subheader'}>\r\n                        <h2 className={'subheader__name'}>Пользователи</h2>\r\n                        <Button type={'button'}\r\n                                icon={PlusIcon}\r\n                                text={'Добавить'} callback={onAddButtonClick}/>\r\n                    </div>\r\n                    <table className={'users-page__table'}>\r\n                        <thead>\r\n                        <tr className={'table__headers'}>\r\n                            <td className={'table__header'}>Фамилия</td>\r\n                            <td className={'table__header'}>Имя</td>\r\n                            <td className={'table__header'}>Отчество</td>\r\n                            <td className={'table__header'}>E-mail</td>\r\n                            <td className={'table__header'}>Логин</td>\r\n                            <td className={'table__header'}></td>\r\n                        </tr>\r\n                        </thead>\r\n                        <tbody>\r\n                        {users &&\r\n                        users.map((user, i) => {\r\n                            return (\r\n                                <tr key={`user_${i + 1}`}\r\n                                    className={'table__row'}>\r\n                                    <td className={'table__field'}>{user.lastName}</td>\r\n                                    <td className={'table__field'}>{user.firstName}</td>\r\n                                    <td className={'table__field'}>{user.middleName}</td>\r\n                                    <td className={'table__field'}>{user.email}</td>\r\n                                    <td className={'table__field'}>{user.login}</td>\r\n                                    <td className={'table__buttons-field'}>\r\n                                        <div className={'buttons'}>\r\n                                            <Button type={'button'}\r\n                                                    callback={onEditButtonClick.bind(user)}\r\n                                                    text={null} icon={PencilIcon}/>\r\n                                            <Button type={'button'}\r\n                                                    callback={onDeleteButtonClick.bind(user)}\r\n                                                    text={null} icon={TrashIcon}/>\r\n                                        </div>\r\n\r\n                                    </td>\r\n                                </tr>\r\n                            );\r\n                        })\r\n                        }\r\n                        </tbody>\r\n                    </table>\r\n                </div>\r\n                {isAddUserModalOpen\r\n                && <AddUserModal addUser={addUser}\r\n                                 closeModal={() => setAddUserModalOpen(false)}/>\r\n                }\r\n                {isEditUserModalOpen && editingUser\r\n                && <EditUserModal userData={editingUser}\r\n                    closeModal={() => setEditUserModalOpen(false)}\r\n                                  updateUser={updateUser}/>\r\n                }\r\n                {isDeleteUserModalOpen && deletingUser\r\n                && <DeleteUserModal deleteUser={deleteUser}\r\n                                    userData={deletingUser}\r\n                                    closeModal={() => setDeleteUserModalOpen(false)} />\r\n                }\r\n            </main>\r\n        </div>\r\n    );\r\n}","import React from 'react';\nimport {UsersPage} from \"./components/pages/UsersPage\";\n\nfunction App() {\n  return (\n    <UsersPage />\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport \"./styles/style.scss\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}